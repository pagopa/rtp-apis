openapi: 3.1.0

info:
  title: Takeover notification API.
  version: 1.0.0
  description: |
    APIs used by the Payer's Registry (PagoPA S.p.A.) to notify the takeover of
    another Payer's Service Provider.
  contact:
    name: PagoPA S.p.A.
    email: rtp@pagopa.it

servers:
  - description: Production
    url: "{server}/rtp"
    variables:
      server:
        description: Scheme, host, port and base path to reach APIs.
        default: https://localhost
    x-internal: false
    
tags:
  - name: takeover
    description: Takeover operation.

paths:
  /takeovers:
    post:
      operationId: takeover
      summary: Operation to notify the takeover.
      description: |
        The operation is used by the Payer's Registry to notify the takeover.
      tags: [takeover]
      security:
        - mtls: []
      requestBody:
        $ref: '#/components/requestBodies/Takeover'
      responses:
        "200":
          #description: Ok.
          $ref: '#/components/responses/Takeover'
        "400":
          #description: Bad request.
          $ref: '#/components/responses/Error'
        "401":
          #description: Unauthorized.
          $ref: '#/components/responses/Error'
        "403":
          #description: Forbidden.
          $ref: '#/components/responses/Error'
        "404":
          #description: Not found.
          $ref: '#/components/responses/Error'
        "406":
          #description: Not acceptable. Did you require application/json?
          $ref: '#/components/responses/Error'
        "415":
          #description: Unsupported media type. Did you provide application/json?
          $ref: '#/components/responses/Error'
        "429":
          #description: Too many request.
          $ref: '#/components/responses/Error'
        "500":
          #description: Server error.
          $ref: '#/components/responses/Error'
        default:
          #description: Unexpected error.
          $ref: '#/components/responses/Error'

components:
  # ============================================================================
  # Schemas.
  # ============================================================================
  schemas:
    # --------------------------------------------------------------------------
    # Basic types for CORS stuff.
    # --------------------------------------------------------------------------
    AccessControlAllowOrigin:
      description: |
        Indicates whether the response can be shared with requesting code from
        the given origin.
      type: string
      pattern: "^[ -~]{1,2048}$"
      minLength: 1
      maxLength: 2048

    # --------------------------------------------------------------------------
    # Basic types for rate limit handling.
    # --------------------------------------------------------------------------
    RateLimitLimit:
      description: The number of allowed requests in the current period.
      type: integer
      format: int32
      minimum: 1
      maximum: 240

    RateLimitReset:
      description: The number of seconds left in the current period.
      type: integer
      format: int32
      minimum: 1
      maximum: 60

    RetryAfter:
      description: |
        The number of seconds to wait before allowing a follow-up request.
      type: integer
      format: int32
      minimum: 1
      maximum: 240

    # --------------------------------------------------------------------------
    # Basic types for error handling.
    # --------------------------------------------------------------------------
    ErrorCode:
      description: Error code.
      type: string
      pattern: "^[A-F0-9]{9}$"
      minLength: 9
      maxLength: 9
      example: "01000000F"
    
    ErrorDescription:
      description: Error description.
      type: string
      pattern: "^[ -~]{0,256}$"
      minLength: 0
      maxLength: 256
      example: "Wrong party identifier"

    # --------------------------------------------------------------------------
    # Domain specific basic types.
    # --------------------------------------------------------------------------
    Bic:
      description: Bank Identification Code.
      type: string
      pattern: "^[A-Z0-9]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}$"
      minLength: 8
      maxLength: 11
      example: "UNCRITMM"

    FiscalCode:
      description: Fiscal code. It is used as identifier of the Payer.
      type: string
      pattern: "^(([A-Z]{6}\\d{2}[A-Z]\\d{2}[A-Z]\\d{3}[A-Z])|(\\d{11}))$"
      minLength: 11
      maxLength: 16
      example: "RSSMRA85T10A562S"

    Vat:
      description: Value Added Tax.
      type: string
      pattern: "^[0-9]{11}$"
      minLength: 11
      maxLength: 11
      example: "12345678911"

    # --------------------------------------------------------------------------
    # Complex type for error handling.
    # --------------------------------------------------------------------------
    Error:
      description: Error details.
      type: object
      additionalProperties: false
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        description:
          $ref: '#/components/schemas/ErrorDescription'
      required:
        - code
        - description
      example:
        code: "01000000F"
        description: "Fiscal code must not be null"

    Errors:
      description: List of errors returned by the application.
      type: object
      additionalProperties: false
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 32
          items:
            $ref: '#/components/schemas/Error'
      required:
        - errors
      example:
        errors:
          - code: "01000000F"
            description: "Fiscal code must not be null"

    # ------------------------------------------------------
    # Domain specific complex types.
    # ------------------------------------------------------
    TakeoverReq:
      description: Data to notify a takeover.
      type: object
      additionalProperties: false
      properties:
        payer:
          $ref: '#/components/schemas/Payer'
      required:
        - payer
      example:
        payer:
          fiscalCode: "RSSMRA85T10A562S"
          rtpSpId: "12345678911"
  
    Payer:
      description: Payer data.
      type: object
      additionalProperties: false
      properties:
        fiscalCode:
          $ref: '#/components/schemas/FiscalCode'
        rtpSpId:
          $ref: '#/components/schemas/PartyId'
      required:
        - fiscalCode
        - rtpSpId
      example:
        fiscalCode: "RSSMRA85T10A562S"
        rtpSpId: "12345678911"

    PartyId:
      description: |
        Unique and unambiguous identification of a party which loses the payer.

        A Service Provider is identified by its BIC (Bank Identification Code)
        if it is a PSP, otherwise it is identified by its VAT identification
        number (Value Added Tax id).
      oneOf:
        - $ref: '#/components/schemas/Bic'
        - $ref: '#/components/schemas/Vat'

  # ============================================================================
  # Request bodies.
  # ============================================================================
  requestBodies:
    Takeover:
      description: Request to notify takeover.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TakeoverReq'

  # ============================================================================
  # Responses
  # ============================================================================
  responses:
    Takeover:
      description: Response returned when a takeover in notified.
      headers:
        Access-Control-Allow-Origin:
          description: |
            Indicates whether the response can be shared with requesting code
            from the given origin.
          required: false
          schema:
            $ref: '#/components/schemas/AccessControlAllowOrigin'
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitLimit'
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitReset'

    Error:
      description: Response returned when an error occured.
      headers:
        Access-Control-Allow-Origin:
          description: |
            Indicates whether the response can be shared with requesting code
            from the given origin.
          required: false
          schema:
            $ref: '#/components/schemas/AccessControlAllowOrigin'
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitLimit'
        RateLimit-Reset:
          description: The number of seconds left in the current period
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitReset'
        Retry-After:
          description: |
            The number of seconds to wait before allowing a follow-up request.
          required: false
          schema:
            $ref: '#/components/schemas/RetryAfter'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'

  # ============================================================================
  # Security schemes.
  # ============================================================================
  securitySchemes:
    mtls:
      description: |
        Cert must be a Qualified Website Autentication Certificate (QWAC).
      type: mutualTLS