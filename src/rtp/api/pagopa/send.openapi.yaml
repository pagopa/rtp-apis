openapi: 3.0.3

info:
  title: RTP Send API.
  version: 0.0.1
  description: |
    The API is designed for creating and sending payment requests through the
    pagoPa system, with strict validation to ensure data integrity.
  contact:
    name: PagoPA S.p.A.
    email: rtp@pagopa.it

servers:
  - description: Development/Test
    url: https://api-rtp.dev.cstar.pagopa.it/rtp
    x-internal: true
  - description: User Acceptance Test
    url: https://api-rtp.uat.cstar.pagopa.it/rtp
    x-internal: false
  - description: Production
    url: https://api-rtp.cstar.pagopa.it/rtp
    x-internal: false

tags:
  - name: rtps
    description: API Group aims to notify a pagoPa notice through RTP.

paths:
  /rtps:
    post:
      operationId: createRtp
      summary: Create and send a new RTP from a pagoPa notice
      description: Create and send a new RTP from a pagoPa notice
      tags: [rtps]
      security:
        - oAuth2: [admin_rtp_send, write_rtp_send]
      parameters:
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/Version'
      requestBody:
          $ref: '#/components/requestBodies/CreateRtp'
      responses:
        "201":
          #description: Created.
          $ref: '#/components/responses/RTPCreatedAndSent'
        "400":
          #description: Bad request.
          $ref: '#/components/responses/Error'
        "401":
          #description: Wrong credentials.
          $ref: '#/components/responses/Error'
        "403":
          #description: Forbidden
          $ref: '#/components/responses/Error'
        "406":
          #description: Not acceptable. Did you require application/json?
          $ref: '#/components/responses/Error'
        "409":
          #description: Conflict.
          $ref: '#/components/responses/Error'
        "415":
          #description: Unsupported media type. Did you provide application/json?
          $ref: '#/components/responses/Error'
        "422":
          #description: Error received from Service Provider?
          $ref: '#/components/responses/Error'
        "429":
          #description: Too many request.
          $ref: '#/components/responses/Error'
        "500":
          #description: Server error.
          $ref: '#/components/responses/Error'
        default:
          #description: Unexpected error.
          $ref: '#/components/responses/Error'

components:
  schemas:
    # --------------------------------------------------------------------------
    # Basic types for CORS stuff.
    # --------------------------------------------------------------------------
    AccessControlAllowOrigin:
      description: |
        Indicates whether the response can be shared with requesting code from
        the given origin.
      type: string
      pattern: "^[ -~]{1,2048}$"
      minLength: 1
      maxLength: 2048

    # --------------------------------------------------------------------------
    # Basic types for rate limit handling.
    # --------------------------------------------------------------------------
    RateLimitLimit:
      description: The number of allowed requests in the current period.
      type: integer
      format: int32
      minimum: 1
      maximum: 240

    RateLimitReset:
      description: The number of seconds left in the current period.
      type: integer
      format: int32
      minimum: 1
      maximum: 60

    RetryAfter:
      description: |
        The number of seconds to wait before allowing a follow-up request.
      type: integer
      format: int32
      minimum: 1
      maximum: 240

    # --------------------------------------------------------------------------
    # Basic types for error handling.
    # --------------------------------------------------------------------------
    ErrorCode:
      description: Error code.
      type: string
      pattern: "^[A-F0-9]{9}$"
      minLength: 9
      maxLength: 9
      example: "01000000F"

    ErrorDescription:
      description: Error description.
      type: string
      pattern: "^[ -~]{0,256}$"
      minLength: 0
      maxLength: 256
      example: "Wrong party identifier"

    StatusCode:
      description: HTTP status code.
      type: integer
      format: int32
      minimum: 0
      maximum: 999
      example: 401

    # --------------------------------------------------------------------------
    # Complex type for error handling.
    # --------------------------------------------------------------------------
    Error:
      description: Error details.
      type: object
      additionalProperties: false
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        description:
          $ref: '#/components/schemas/ErrorDescription'
      required:
        - code
        - description
      example:
        code: "01000000F"
        description: "Wrong party identifier"

    Errors:
      description: |
        Error details.
        The format depends on the component which returns it.
      oneOf:
        - $ref: '#/components/schemas/Type1Error'
        - $ref: '#/components/schemas/Type2Error'
        - $ref: '#/components/schemas/Type3Error'

    Type1Error:
      description: List of errors returned by the application.
      type: object
      additionalProperties: false
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 32
          items:
            $ref: '#/components/schemas/Error'
      required:
        - errors
      example:
        errors:
          - code: "01000000F"
            description: "Wrong party identifier"

    Type2Error:
      description: Error details returned by the APIM.
      type: object
      additionalProperties: false
      properties:
        statusCode:
          $ref: '#/components/schemas/StatusCode'
        message:
          $ref: '#/components/schemas/ErrorDescription'
      required:
        - statusCode
        - message
      example:
        statusCode: 401
        message: "Invalid JWT."

    Type3Error:
      description: Error details returned by the framework.
      type: object
      additionalProperties: false
      properties:
        timestamp:
          description: Timestamp the error occurred.
          type: string
          format: date-time
          minLength: 19
          maxLength: 29
          pattern: "^((?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))(Z|[\\+-]\\d{2}:\\d{2})?)$"
        path:
          description: API path where the error occurred.
          type: string
          pattern: "^[ -~]{1,1024}$"
          minLength: 1
          maxLength: 1024
        status:
          $ref: '#/components/schemas/StatusCode'
        error:
          $ref: '#/components/schemas/ErrorDescription'
        requestId:
          description: ID of the request.
          type: string
          pattern: "^[ -~]{1,128}$"
          minLength: 1
          maxLength: 128
      required:
        - timestamp
        - path
        - status
        - error
        - requestId
      example:
        timestamp: "2024-12-31T09:54:01.763+00:00"
        path: "/activations"
        status: 415
        error: "Unsupported Media Type"
        requestId: "3fb00d0f-416"

    # --------------------------------------------------------------------------
    # Domain specific basic types.
    # --------------------------------------------------------------------------
    AmountEuroCents:
      description: Amount of pagoPA notice, in euro cents.
      type: integer
      format: int32
      minimum: 0
      maximum: 99999999999
      example: 10050

    Name:
      description: Name of the Payee or the Payer.
      type: string
      pattern: "^[ -~]{1,140}$"
      minLength: 1
      maxLength: 140
      example: "Comune di Roma"

    NoticeNumber:
      description: pagoPA notice number.
      type: string
      pattern: "\\d{18}"
      minLength: 18
      maxLength: 18
      example: "311111111112222222"

    Payee:
      description: Payee data.
      type: object
      additionalProperties: false
      properties:
        payeeId:
          $ref: '#/components/schemas/PayeeId'
        name:
          $ref: '#/components/schemas/Name'
        payTrxRef:
          $ref: '#/components/schemas/PayTrxRef'
      required:
        - payeeId
        - name
        - payTrxRef
  
    Payer:
      description: Payer data.
      type: object
      additionalProperties: false
      properties:
        payerId:
          $ref: '#/components/schemas/PayerId'
        name:
          $ref: '#/components/schemas/Name'
      required:
        - payerId
        - name

    PaymentNotice:
      description: pagoPA notice data.
      type: object
      additionalProperties: false
      properties:
        noticeNumber:
          $ref: '#/components/schemas/NoticeNumber'
        amount:
          $ref: '#/components/schemas/AmountEuroCents'
        description:
          type: string
          description: The pagopa notice's description.
          pattern: "^[ -~]{140}$"
          minLength: 1
          maxLength: 140
        subject:
          type: string
          description: The subject of payment (e.g. TARI 2025).
          pattern: "^[ -~]{140}$"
          minLength: 1
          maxLength: 140
        expiryDate:
          type: string
          description: The pagoPA notice's expiry date. Formatted as yyyy-MM-dd.
          format: date
          pattern: "^(\\d{4}-\\d{2}-\\d{2})$"
          minLength: 10
          maxLength: 10
          example: "2024-12-03"
      required:
        - noticeNumber
        - amount
        - description
        - subject
        - expiryDate

    PayerId:
      type: string
      description: The ID of the recipient of the request to pay. The ID is the fiscal code.
      pattern: "^(([A-Z]{6}\\d{2}[A-Z]\\d{2}[A-Z]\\d{3}[A-Z])|(\\d{11}))$"
      minLength: 11
      maxLength: 16
      example: "ABCDEF12G34H567I"

    PayeeId:
      type: string
      pattern: "\\d{11}|\\d{16}"
      minLength: 11
      maxLength: 16
      description: The Payee ID (e.g. the fiscal code).
      example: "77777777777"
      externalDocs:
        description: "See idPA field"
        url: "https://docs.pagopa.it/sanp/appendici/primitive#paverifypaymentnotice"

    PayTrxRef:
      type: string
      pattern: "^[ -~]{1,140}$"
      minLength: 1
      maxLength: 140
      description: The Pay Transaction Reference.
      example: "ABC/124"

    RtpLocation:
      type: string
      description: The location of created resource.
      format: uri
      pattern: "^[ -~]{1,2048}$"
      minLength: 1
      maxLength: 2048
      example: "https://domain.com/rtps/ce3abf0e-fd24-40d1-b562-a2cdf51afebd"

    CreateRtp:
      type: object
      additionalProperties: false
      properties:
        payee:
          $ref: '#/components/schemas/Payee'
        payer:
          $ref: '#/components/schemas/Payer'
        paymentNotice:
          $ref: '#/components/schemas/PaymentNotice'
      required:
        - paymentNotice
        - payer
        - payee

    # --------------------------------------------------------------------------
    # Basic types for technical stuff.
    # --------------------------------------------------------------------------
    RequestId:
      description: Identifier of the request.
      type: string
      format: uuid
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      minLength: 36
      maxLength: 36
      example: "bd615b4a-066d-443e-8dd2-a28a39931fef"
    
    Version:
      description: Version of the required API.
      type: string
      pattern: "^[ -~]{1,64}$"
      minLength: 1
      maxLength: 64
      example: "v1"

  # ============================================================================
  # Request bodies.
  # ============================================================================
  requestBodies:
    CreateRtp:
      description: Request to create or update a RTP activation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateRtp'

  # ============================================================================
  # Responses
  # ============================================================================
  responses:
    RTPCreatedAndSent:
      description: "Request to pay created and sent"
      headers:
        Location:
          required: true
          description: "The location of created rtp"
          schema:
            $ref: "#/components/schemas/RtpLocation"
        Access-Control-Allow-Origin:
          description: |
            Indicates whether the response can be shared with requesting code
            from the given origin.
          required: false
          schema:
            $ref: '#/components/schemas/AccessControlAllowOrigin'
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitLimit'
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitReset'
        Retry-After:
          description: |
            The number of seconds to wait before allowing a follow-up request.
          required: false
          schema:
            $ref: '#/components/schemas/RetryAfter'
            
    Error:
      description: Response returned when an error occured.
      headers:
        Access-Control-Allow-Origin:
          description: |
            Indicates whether the response can be shared with requesting code
            from the given origin.
          required: false
          schema:
            $ref: '#/components/schemas/AccessControlAllowOrigin'
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitLimit'
        RateLimit-Reset:
          description: The number of seconds left in the current period
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitReset'
        Retry-After:
          description: |
            The number of seconds to wait before allowing a follow-up request.
          required: false
          schema:
            $ref: '#/components/schemas/RetryAfter'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
        text/*:
          schema:
            type: string
            pattern: "^[ -~]{0,65535}$"
            maxLength: 65535

  # ============================================================================
  # Parameters.
  # ============================================================================
  parameters:
    RequestId:
      name: RequestId
      in: header
      description: Identifier of the request.
      required: true
      schema:
        $ref: '#/components/schemas/RequestId'

    Version:
      name: Version
      in: header
      description: Version of the required API.
      required: true
      schema:
        $ref: '#/components/schemas/Version'
  
  # ============================================================================
  # Security schemes.
  # ============================================================================
  securitySchemes:
    oAuth2:
      description: |
        A bearer token in the format of a JWS and conforms to the specifications
        included in RFC8725.
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /token
          refreshUrl: /token
          scopes:
            admin_rtp_send: Admin RPT.
            write_rtp_send: Create, update or delete RTP.
