openapi: 3.0.3

info:
  title: RTP Activation API.
  version: 1.0.0
  description: |
    API to handle Payees which use PagoPA as RTP Service Provider.
  contact:
    name: PagoPA S.p.A.
    email: rtp@pagopa.it

servers:
  - description: Development/Test
    url: https://api-rtp.dev.cstar.pagopa.it
    x-internal: true
  - description: User Acceptance Test
    url: https://api-rtp.uat.cstar.pagopa.it
    x-internal: false
  - description: Production
    url: https://api-rtp.cstar.pagopa.it
    x-internal: false
    
tags:
  - name: create
    description: Create operation.
  - name: read
    description: Read operation.
  - name: update
    description: Update operation.
  - name: delete
    description: Delete operation.

paths:
  /payees:
    get:
      operationId: getPayees
      summary: Returns Payees.
      description: |
        The operation returns all Payees which use PagoPA as RTP Service
        Provider.
      tags: [read]
      security:
        - oAuth2: [read_rtp_payees]
      parameters:
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/PageSize'
      responses:
        "200":
          #description: Ok.
          $ref: '#/components/responses/PageOfPayees'
        "400":
          #description: Bad request.
          $ref: '#/components/responses/Error'
        "401":
          #description: Access token is missing or invalid.
          $ref: '#/components/responses/Error'
        "403":
          #description: Forbidden.
          $ref: '#/components/responses/Error'
        "406":
          #description: Not acceptable. Did you require application/json?
          $ref: '#/components/responses/Error'
        "429":
          #description: Too many request.
          $ref: '#/components/responses/Error'
        "500":
          #description: Server error.
          $ref: '#/components/responses/Error'
        default:
          #description: Unexpected error.
          $ref: '#/components/responses/Error'

components:
  # ============================================================================
  # Schemas.
  # ============================================================================
  schemas:
    # --------------------------------------------------------------------------
    # Basic types for CORS stuff.
    # --------------------------------------------------------------------------
    AccessControlAllowOrigin:
      description: |
        Indicates whether the response can be shared with requesting code from
        the given origin.
      type: string
      pattern: "^[ -~]{1,2048}$"
      minLength: 1
      maxLength: 2048

    # --------------------------------------------------------------------------
    # Basic types for rate limit handling.
    # --------------------------------------------------------------------------
    RateLimitLimit:
      description: The number of allowed requests in the current period.
      type: integer
      format: int32
      minimum: 1
      maximum: 240

    RateLimitReset:
      description: The number of seconds left in the current period.
      type: integer
      format: int32
      minimum: 1
      maximum: 60

    RetryAfter:
      description: |
        The number of seconds to wait before allowing a follow-up request.
      type: integer
      format: int32
      minimum: 1
      maximum: 240

    # --------------------------------------------------------------------------
    # Basic types for paging.
    # --------------------------------------------------------------------------
    PageNumber:
      description: Number of the page.
      type: integer
      format: int32
      minimum: 0
      maximum: 2147483647
      example: 1

    PageSize:
      description: Size of the page.
      type: integer
      format: int32
      minimum: 1
      maximum: 128
      example: 20

    TotalElements:
      description: Total elements.
      type: integer
      format: int64
      minimum: 0
      maximum: 9223372036854775807
      example: 20

    TotalPages:
      description: Total pages.
      type: integer
      format: int64
      minimum: 0
      maximum: 9223372036854775807
      example: 20

    # --------------------------------------------------------------------------
    # Basic types for error handling.
    # --------------------------------------------------------------------------
    ErrorCode:
      description: Error code.
      type: string
      pattern: "^[A-F0-9]{9}$"
      minLength: 9
      maxLength: 9
      example: "01000000F"
    
    ErrorDescription:
      description: Error description.
      type: string
      pattern: "^[ -~]{0,256}$"
      minLength: 0
      maxLength: 256
      example: "Wrong party identifier"

    StatusCode:
      description: HTTP status code.
      type: integer
      format: int32
      minimum: 0
      maximum: 999
      example: 401

    # --------------------------------------------------------------------------
    # Basic types for technical stuff.
    # --------------------------------------------------------------------------
    RequestId:
      description: Identifier of the request.
      type: string
      format: uuid
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      minLength: 36
      maxLength: 36
      example: "bd615b4a-066d-443e-8dd2-a28a39931fef"

    Version:
      description: Version of the required API.
      type: string
      pattern: "^[ -~]{1,64}$"
      minLength: 1
      maxLength: 64
      example: "v1"

    # --------------------------------------------------------------------------
    # Domain specific basic types.
    # --------------------------------------------------------------------------
    Name:
      description: Name of Payee.
      type: string
      pattern: "^[ -~]{1,64}$"
      minLength: 1
      maxLength: 64
      example: "Roma Capitale"
      
    PayeeId:
      description: ID of the Payee (fiscal code or VAT).
      type: string
      pattern: "\\d{11}|\\d{16}"
      minLength: 11
      maxLength: 16
      example: "02438750586"

    # --------------------------------------------------------------------------
    # Complex types for paging.
    # --------------------------------------------------------------------------
    PageMetadata:
      description: Metadata of a page of data.
      type: object
      additionalProperties: false
      properties:
        totalElements:
          $ref: '#/components/schemas/TotalElements'
        totalPages:
          $ref: '#/components/schemas/TotalPages'
        page:
          $ref: '#/components/schemas/PageNumber'
        size:
          $ref: '#/components/schemas/PageSize'
      required:
        - totalElements
        - totalPages
        - page
        - size
      example:
        totalElements: 198
        totalPages: 10
        page: 5
        size: 20

    # --------------------------------------------------------------------------
    # Complex type for error handling.
    # --------------------------------------------------------------------------
    Error:
      description: Error details.
      type: object
      additionalProperties: false
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        description:
          $ref: '#/components/schemas/ErrorDescription'
      required:
        - code
        - description
      example:
        code: "01000000F"
        description: "Wrong party identifier"

    Errors:
      description: |
        Error details.
        The format depends on the component which returns it.
      oneOf:
        - $ref: '#/components/schemas/Type1Error'
        - $ref: '#/components/schemas/Type2Error'
        - $ref: '#/components/schemas/Type3Error'

    Type1Error:
      description: List of errors returned by the application.
      type: object
      additionalProperties: false
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 32
          items:
            $ref: '#/components/schemas/Error'
      required:
        - errors
      example:
        errors:
          - code: "01000000F"
            description: "Wrong party identifier"

    Type2Error:
      description: Error details returned by the APIM.
      type: object
      additionalProperties: false
      properties:
        statusCode:
          $ref: '#/components/schemas/StatusCode'
        message:
          $ref: '#/components/schemas/ErrorDescription'
      required:
        - statusCode
        - message
      example:
        statusCode: 401
        message: "Invalid JWT."

    Type3Error:
      description: Error details returned by the framework.
      type: object
      additionalProperties: false
      properties:
        timestamp:
          description: Timestamp the error occurred.
          type: string
          format: date-time
          minLength: 19
          maxLength: 29
          pattern: "^((?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))(Z|[\\+-]\\d{2}:\\d{2})?)$"
        path:
          description: API path where the error occurred.
          type: string
          pattern: "^[ -~]{1,1024}$"
          minLength: 1
          maxLength: 1024
        status:
          $ref: '#/components/schemas/StatusCode'
        error:
          $ref: '#/components/schemas/ErrorDescription'
        requestId:
          description: ID of the request.
          type: string
          pattern: "^[ -~]{1,128}$"
          minLength: 1
          maxLength: 128
      required:
        - timestamp
        - path
        - status
        - error
        - requestId
      example:
        timestamp: "2024-12-31T09:54:01.763+00:00"
        path: "/payees"
        status: 415
        error: "Unsupported Media Type"
        requestId: "3fb00d0f-416"

    # ------------------------------------------------------
    # Domain specific complex types.
    # ------------------------------------------------------
    Payee:
      description: Payee data.
      type: object
      additionalProperties: false
      properties:
        payeeId:
          $ref: '#/components/schemas/PayeeId'
        name:
          $ref: '#/components/schemas/Name'
      required:
        - payeeId
        - name
      example:
        payeeId: "02438750586"
        name: "Roma Capitale"

    Payees:
      description: List of Payees.
      type: array
      minItems: 0
      maxItems: 128
      items:
        $ref: '#/components/schemas/Payee'
      example:
        - payeeId: "02438750586"
          name: "Roma Capitale"
        - payeeId: "80015010723"
          name: "Comune di Bari" 

    PageOfPayees:
      description: Page of Payees.
      type: object
      additionalProperties: false
      properties:
        payees:
          $ref: '#/components/schemas/Payees'
        page:
          $ref: '#/components/schemas/PageMetadata'
      required:
        - payees
        - page
      example:
        payees:
          - payeeId: "02438750586"
            name: "Roma Capitale"
          - payeeId: "80015010723"
            name: "Comune di Bari" 
        page:
          totalElements: 2
          totalPages: 2
          page: 1
          size: 1

  # ============================================================================
  # Parameters.
  # ============================================================================
  parameters:
    PageNumber:
      name: page
      in: query
      description: Number of the requested page of data.
      required: true
      schema:
        $ref: '#/components/schemas/PageNumber'

    PageSize:
      name: size
      in: query
      description: Size of the requested page of data.
      required: true
      schema:
        $ref: '#/components/schemas/PageSize'

    RequestId:
      name: RequestId
      in: header
      description: Identifier of the request.
      required: true
      schema:
        $ref: '#/components/schemas/RequestId'

    Version:
      name: Version
      in: header
      description: Version of the required API.
      required: true
      schema:
        $ref: '#/components/schemas/Version'

  # ============================================================================
  # Responses
  # ============================================================================
  responses:
    Error:
      description: Response returned when an error occured.
      headers:
        Access-Control-Allow-Origin:
          description: |
            Indicates whether the response can be shared with requesting code
            from the given origin.
          required: false
          schema:
            $ref: '#/components/schemas/AccessControlAllowOrigin'
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitLimit'
        RateLimit-Reset:
          description: The number of seconds left in the current period
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitReset'
        Retry-After:
          description: |
            The number of seconds to wait before allowing a follow-up request.
          required: false
          schema:
            $ref: '#/components/schemas/RetryAfter'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
        text/*:
          schema:
            type: string
            pattern: "^[ -~]{0,65535}$"
            maxLength: 65535

    PageOfPayees:
      description: Response to the request to get Payees.
      headers:
        Access-Control-Allow-Origin:
          description: |
            Indicates whether the response can be shared with requesting code
            from the given origin.
          required: false
          schema:
            $ref: '#/components/schemas/AccessControlAllowOrigin'
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitLimit'
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          required: false
          schema:
            $ref: '#/components/schemas/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PageOfPayees'

  # ============================================================================
  # Security schemes.
  # ============================================================================
  securitySchemes:
    oAuth2:
      description: |
        A bearer token in the format of a JWS and conforms to the specifications
        included in RFC8725.
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /token
          refreshUrl: /token
          scopes:
            read_rtp_payees: Read RTP activation.
